<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" debug="true" scanPeriod="30 seconds">
 
    <!-- usage : https://logback.qos.ch/manual/layouts.html -->
   
   ﻿ <!-- 이 부분에서 로그 저장소(log repo)를 개인 상황에 맞게 설정합니다. -->﻿
    <property name="LOGS_PATH" value="C:\heejin\log\springTransaction" />
  
    <!-- 
		org.apache.log4j.ConsoleAppender 	콘솔에 로그 메시지 출력 
		org.apache.log4j.FileAppender    	파일에 로그 메시지 기록 
		org.apache.log4j.RollingFileAppender 파일에 로그 메시지 기록 (일정 크기가 되면 로그 파일 변경) 
		org.apache.log4j.DailyRollingFileAppender 파일에 로그 메시지 기록 (하루 단위로 로그 파일 변경) 
		org.apache.log4j.net.SMTPAppender 	로그 메시지를 이메일로 전송 
		org.apache.log4j.DBAppender         로그 메시지를 데이터베이스에 저장
     -->
     
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS}: --[%thread{10}] [%logger{20}] -- %msg%n </pattern>
        </encoder>
    </appender>
   
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

	<!-- <file>${LOGS_PATH}/labatory.log</file> -->
       
        <append>true</append>
        
        <!--
                %d{yyyy-MM-dd HH:mm:ss} : 년월일 시분초
                %thread : thread name
                %-5level : log level , -5는 출력 고정폭 값
				%-4 : 요소 정렬. just alignment of the element.
		      	%relative : 프로그램 시작 후 흐른 상대 시간(밀리초). 
		      	: relative timestamp in milliseconds since the start of the aplication.
                %logger{length} :Logger name의 이름, {length}는 자리수
                %msg : log message %message은 alias
                %n : 줄바꿈
               
                org.fusesource.jansi:jansi:1.8 가 필요.
                       Linux ,Mac OS X 기본 지원
                       <withJansi>true</withJansi>설정후 사용해야 함
                %highlight : log level별로 color 차별화
                -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>%d{yyyy-MM-dd HH:mm:ss} [%-5level] [%thread] [%logger{36}] - %msg%n</Pattern>
        </encoder>
       
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOGS_PATH}/test/%d{yyyy-MM-dd}/lab_test_%d{yyyy-MM-dd HH}.%i.txt</fileNamePattern>
            <maxFileSize>10KB</maxFileSize> <!-- 로그 파일당 사이즈 한계 -->
            <maxHistory>30</maxHistory> <!-- 30일 유지 -->
            <totalSizeCap>1GB</totalSizeCap><!-- 1GB 용량 제한 -->
        </rollingPolicy>
       
    </appender>
    
    <logger name="org.apache.ibatis" level="warn" />
    
    <logger name="org.mybatis" level="warn" />
   
	<logger name="org.springframework" level="info" />
    
    <logger name="com.javateam.springTransaction">
		<level value="debug" />
	</logger> 
	
	<!-- log4jdbc -->
	<logger name="jdbc.sqltiming" additivity="false">
		<level value="warn" />
	</logger>

	<logger name="jdbc.sqlonly" additivity="false"> 
		<level value="info"/> 
	</logger>

	<logger name="jdbc.audit" additivity="false"> 
		<level value="warn"/>  
	</logger> 

	<logger name="jdbc.resultset" additivity="false">
		<level value="warn" />
	</logger>

	<logger name="jdbc.resultsettable" additivity="false"> 
		<level value="info"/>  
	</logger> 
	
	<!--// log4jdbc -->
 
    <root level="debug">
        <appender-ref ref="STDOUT"/> <!-- Console에 로그를 출력하고자 할 때 사용 -->
        <appender-ref ref="FILE"/> <!-- File로 로그를 남기고자 할 때 사용 -->
    </root>
 

<typeAliases></typeAliases>
</configuration>